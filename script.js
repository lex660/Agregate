document.addEventListener('DOMContentLoaded', () => {
    // ============================================
    // –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
    // ============================================
    
    // –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç URL –Ω–∞ URL –≤–∞—à–µ–≥–æ Cloudflare Worker
    const CLOUDFLARE_WORKER_URL = 'https://islamic-installment-api.sasun-smbatyan.workers.dev';
    
    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    const form = document.getElementById('calculator-form');
    const resultsContainer = document.getElementById('results-container');
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let lastCalculationInputs = {};
    let isLoading = false;

    // ============================================
    // –ê–ù–ê–õ–ò–¢–ò–ö–ê
    // ============================================
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å–µ—â–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (typeof ym === 'function') {
        ym(ymCounterId, 'reachGoal', 'visit');
    }

    // ============================================
    // –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê
    // ============================================
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', async (event) => {
        event.preventDefault();
        
        if (isLoading) return; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
        const region = document.getElementById('region').value;
        const productPrice = parseFloat(document.getElementById('product-price').value);
        const downPayment = parseFloat(document.getElementById('down-payment').value);
        const term = parseInt(document.getElementById('term').value, 10);

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (isNaN(productPrice) || productPrice <= 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.');
            return;
        }
        if (isNaN(downPayment) || downPayment < 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å.');
            return;
        }
        if (downPayment >= productPrice) {
            alert('–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.');
            return;
        }

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—á—ë—Ç–∞
        lastCalculationInputs = { region, productPrice, downPayment, term };

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Cloudflare Worker
        await fetchAndDisplayResults(region, productPrice, downPayment, term);
        
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: —Ä–∞—Å—á—ë—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω
        if (typeof ym === 'function') {
            ym(ymCounterId, 'reachGoal', 'calc_used', {
                price: productPrice,
                down_payment: downPayment,
                term: term,
                region: region
            });
        }
    });

    // ============================================
    // API –ó–ê–ü–†–û–°–´
    // ============================================
    
    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Cloudflare Worker –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
     */
    async function fetchAndDisplayResults(region, price, downPayment, term) {
        try {
            isLoading = true;
            showLoadingState();

            const response = await fetch(`${CLOUDFLARE_WORKER_URL}/api/calculate`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    region: region,
                    price: price,
                    downPayment: downPayment,
                    term: term
                })
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            
            if (data.success === false && data.error === 'no_data') {
                // –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                showNoDataState(data.message, data.failedBanks);
            } else if (data.success && data.results) {
                displayResults(data.results, data.warnings);
            } else {
                throw new Error(data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            }

        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
            showErrorState(error.message);
        } finally {
            isLoading = false;
        }
    }

    // ============================================
    // –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í
    // ============================================
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
     */
    function showNoDataState(message, failedBanks) {
        const failedList = failedBanks && failedBanks.length > 0 
            ? `<ul class="failed-banks-list">${failedBanks.map(b => `<li>${b.name}</li>`).join('')}</ul>`
            : '';

        resultsContainer.innerHTML = `
            <div class="placeholder error">
                <p>‚ö†Ô∏è ${message}</p>
                ${failedList}
                <p class="info-text">–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.</p>
                <button onclick="location.reload()" class="calculate-btn">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>`;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
     */
    function showLoadingState() {
        resultsContainer.innerHTML = `
            <div class="placeholder">
                <div class="loading-spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...</p>
            </div>`;
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
     */
    function showErrorState(errorMessage) {
        resultsContainer.innerHTML = `
            <div class="placeholder error">
                <p>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>
                <p class="error-details">${errorMessage}</p>
                <button onclick="location.reload()" class="calculate-btn">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>`;
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–æ–≤
     */
    function displayResults(results, warnings) {
        const formatCurrency = (value) => Math.round(value).toLocaleString('ru-RU');

        if (results.length === 0) {
            resultsContainer.innerHTML = `
                <div class="placeholder">
                    <p>‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—Ä–æ—á–∫–∏.</p>
                </div>`;
            return;
        }

        // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–∞–Ω–∫–∞—Ö
        const warningsHtml = warnings && warnings.length > 0 
            ? `<div class="warnings-banner">
                <p>‚ö†Ô∏è ${warnings.join(' ')}</p>
               </div>`
            : '';

        const tableContent = `
            ${warningsHtml}
            <div class="table-wrapper">
                <table class="results-table" aria-live="polite">
                    <thead>
                        <tr>
                            <th scope="col">–ö–æ–º–ø–∞–Ω–∏—è</th>
                            <th scope="col">–ù–∞—Ü–µ–Ω–∫–∞ (‚ÇΩ)</th>
                            <th scope="col">–ò—Ç–æ–≥–æ (‚ÇΩ)</th>
                            <th scope="col">–í –º–µ—Å—è—Ü (‚ÇΩ)</th>
                            <th scope="col">–î–µ–π—Å—Ç–≤–∏–µ</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${results.map((result, index) => {
                            const noteHtml = result.note ? `<span class="bank-note">${result.note}</span>` : '';
                            const bestDeal = index === 0 ? '<span class="best-deal-badge">üèÜ –õ—É—á—à–µ–µ</span>' : '';
                            
                            return `
                            <tr>
                                <td data-label="–ö–æ–º–ø–∞–Ω–∏—è" class="bank-name-cell">
                                    ${result.name}
                                    ${bestDeal}
                                    ${noteHtml}
                                </td>
                                <td data-label="–ù–∞—Ü–µ–Ω–∫–∞ (‚ÇΩ)">${formatCurrency(result.markup)}</td>
                                <td data-label="–ò—Ç–æ–≥–æ (‚ÇΩ)">${formatCurrency(result.totalCost)}</td>
                                <td data-label="–í –º–µ—Å—è—Ü (‚ÇΩ)">${formatCurrency(result.monthlyPayment)}</td>
                                <td data-label="–î–µ–π—Å—Ç–≤–∏–µ">
                                    <a href="${result.url}"
                                       target="_blank"
                                       rel="noopener noreferrer"
                                       class="apply-btn bank-link"
                                       data-bank-name="${result.name}">
                                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                                    </a>
                                </td>
                            </tr>
                            `;
                        }).join('')}
                    </tbody>
                </table>
            </div>
            <p class="disclaimer">
                üí° –†–∞—Å—á—ë—Ç—ã –Ω–æ—Å—è—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –§–∏–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —É—Ç–æ—á–Ω—è–π—Ç–µ —É –∫–æ–º–ø–∞–Ω–∏–∏-–ø—Ä–æ–¥–∞–≤—Ü–∞.
            </p>
        `;
        
        resultsContainer.innerHTML = tableContent;
    }

    // ============================================
    // –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ö–õ–ò–ö–û–í –ü–û –°–°–´–õ–ö–ê–ú
    // ============================================
    
    resultsContainer.addEventListener('click', (event) => {
        if (event.target.classList.contains('bank-link')) {
            const link = event.target;
            const bankName = link.getAttribute('data-bank-name');

            // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: –∫–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –±–∞–Ω–∫–∞
            if (typeof ym === 'function') {
                ym(ymCounterId, 'reachGoal', 'bank_link_click', {
                    bank: bankName,
                    price: lastCalculationInputs.productPrice,
                    down_payment: lastCalculationInputs.downPayment,
                    term: lastCalculationInputs.term
                });
            }
        }
    });
});
