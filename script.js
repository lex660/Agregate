document.addEventListener('DOMContentLoaded', () => {
    // ============================================
    // –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
    // ============================================
    const CLOUDFLARE_WORKER_URL = 'https://islamic-installment-api.ghalghaiv.workers.dev';
    const ymCounterId = 104202450;

    const form = document.getElementById('calculator-form');
    const resultsContainer = document.getElementById('results-container');

    let lastCalculationInputs = {};
    let isLoading = false;

    // ============================================
    // –ê–ù–ê–õ–ò–¢–ò–ö–ê: –ø–æ—Å–µ—â–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    // ============================================
    if (typeof ym === 'function') {
        try { ym(ymCounterId, 'reachGoal', 'visit'); } catch (e) { console.warn('ym error', e); }
    }

    // ============================================
    // –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–¢–ü–†–ê–í–ö–ò –§–û–†–ú–´
    // ============================================
    form.addEventListener('submit', async (event) => {
        event.preventDefault();
        if (isLoading) return;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞ –∑–¥–µ—Å—å (—Å—Ä–∞–∑—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏)
        if (typeof ym === 'function') {
            try {
                ym(ymCounterId, 'reachGoal', 'calc_click');
            } catch (e) {
            }
        } 

        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
        const region = document.getElementById('region').value;
        const productPrice = parseFloat(document.getElementById('product-price').value);
        const downPayment = parseFloat(document.getElementById('down-payment').value);
        const term = parseInt(document.getElementById('term').value, 10);

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (isNaN(productPrice) || productPrice <= 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞.');
            return;
        }
        if (isNaN(downPayment) || downPayment < 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å.');
            return;
        }
        if (downPayment >= productPrice) {
            alert('–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.');
            return;
        }

        lastCalculationInputs = { region, productPrice, downPayment, term };

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Cloudflare Worker
        await fetchAndDisplayResults(region, productPrice, downPayment, term);

        // –°–æ–±—ã—Ç–∏–µ "—Ä–∞—Å—á—ë—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω" (–¥–æ–ø. –¥–∞–Ω–Ω—ã–µ)
        if (typeof ym === 'function') {
            try {
                ym(ymCounterId, 'reachGoal', 'calc_used', {
                    price: productPrice,
                    down_payment: downPayment,
                    term: term,
                    region: region
                });
            } catch (e) {
            }
        }
    });

    // ============================================
    // API –ó–ê–ü–†–û–°–´
    // ============================================
    async function fetchAndDisplayResults(region, price, downPayment, term) {
        try {
            isLoading = true;
            showLoadingState();

            const response = await fetch(`${CLOUDFLARE_WORKER_URL}/api/calculate`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ region, price, downPayment, term })
            });

            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
            const data = await response.json();

            if (data.success === false && data.error === 'no_data') {
                showNoDataState(data.message, data.failedBanks);
            } else if (data.success && data.results) {
                displayResults(data.results, data.warnings);
            } else {
                throw new Error(data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            }
        } catch (error) {
            showErrorState(error.message || error.toString());
        } finally {
            isLoading = false;
        }
    }

    // ============================================
    // –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í (–∫–∞–∫ —É —Ç–µ–±—è)
    // ============================================
    function showNoDataState(message, failedBanks) {
        const failedList = failedBanks && failedBanks.length > 0
            ? `<ul class="failed-banks-list">${failedBanks.map(b => `<li>${b.name}</li>`).join('')}</ul>`
            : '';
        resultsContainer.innerHTML = `
            <div class="placeholder error">
                <p>‚ö†Ô∏è ${message}</p>
                ${failedList}
                <p class="info-text">–ú—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.</p>
                <button onclick="location.reload()" class="calculate-btn">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>`;
    }

    function showLoadingState() {
        resultsContainer.innerHTML = `
            <div class="placeholder">
                <div class="loading-spinner"></div>
                <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...</p>
            </div>`;
    }

    function showErrorState(errorMessage) {
        resultsContainer.innerHTML = `
            <div class="placeholder error">
                <p>‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.</p>
                <p class="error-details">${errorMessage}</p>
                <button onclick="location.reload()" class="calculate-btn">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É</button>
            </div>`;
    }

    function displayResults(results, warnings) {
        const formatCurrency = (value) => Math.round(value).toLocaleString('ru-RU');
        if (!results || results.length === 0) {
            resultsContainer.innerHTML = `
                <div class="placeholder">
                    <p>‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è —Ä–∞—Å—Å—Ä–æ—á–∫–∏.</p>
                    <p>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ 1 000 000.</p>
                    <p>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π –≤–∑–Ω–æ—Å 25% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–∞.</p>
                </div>`;
            return;
        }

        const warningsHtml = warnings && warnings.length ? `<div class="warnings-banner"><p>‚ö†Ô∏è ${warnings.join(' ')}</p></div>` : '';

        const tableContent = `
            ${warningsHtml}
            <div class="table-wrapper">
                <table class="results-table" aria-live="polite">
                    <thead>
                        <tr>
                            <th scope="col">–ö–æ–º–ø–∞–Ω–∏—è</th>
                            <th scope="col">–ù–∞—Ü–µ–Ω–∫–∞ (‚ÇΩ)</th>
                            <th scope="col">–ò—Ç–æ–≥–æ (‚ÇΩ)</th>
                            <th scope="col">–í –º–µ—Å—è—Ü (‚ÇΩ)</th>
                            <th scope="col">–î–µ–π—Å—Ç–≤–∏–µ</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${results.map((result, index) => {
                        const noteHtml = result.note
  ? `<span class="bank-note">${result.note}</span>`
  : `<span class="bank-note">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${result.totalCost.toLocaleString()}‚ÇΩ, –ø–ª–∞—Ç–µ–∂ ${result.monthlyPayment.toLocaleString()}‚ÇΩ/–º–µ—Å., –º–∏–Ω. –≤–∑–Ω–æ—Å 25%</span>`;
                            const bestDeal = index === 0 ? '<span class="best-deal-badge">üèÜ –õ—É—á—à–µ–µ</span>' : '';
                            return `
                            <tr>
                                <td data-label="–ö–æ–º–ø–∞–Ω–∏—è" class="bank-name-cell">
                                    ${result.name} ${bestDeal} ${noteHtml}
                                </td>
                                <td data-label="–ù–∞—Ü–µ–Ω–∫–∞ (‚ÇΩ)">${formatCurrency(result.markup)}</td>
                                <td data-label="–ò—Ç–æ–≥–æ (‚ÇΩ)">${formatCurrency(result.totalCost)}</td>
                                <td data-label="–í –º–µ—Å—è—Ü (‚ÇΩ)">${formatCurrency(result.monthlyPayment)}</td>
                                <td data-label="–î–µ–π—Å—Ç–≤–∏–µ">
                                    <a href="${result.url}"
                                       target="_blank"
                                       rel="noopener noreferrer"
                                       class="apply-btn bank-link"
                                       data-bank-name="${result.name}">
                                        –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç
                                    </a>
                                </td>
                            </tr>`;
                        }).join('')}
                    </tbody>
                </table>
            </div>
            <p class="disclaimer">üí° –†–∞—Å—á—ë—Ç—ã –Ω–æ—Å—è—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –§–∏–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —É—Ç–æ—á–Ω—è–π—Ç–µ —É –∫–æ–º–ø–∞–Ω–∏–∏-–ø—Ä–æ–¥–∞–≤—Ü–∞.</p>
        `;
        resultsContainer.innerHTML = tableContent;
    }

    // ============================================
    // –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ö–õ–ò–ö–û–í –ü–û –°–°–´–õ–ö–ê–ú (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
    // ============================================
    resultsContainer.addEventListener('click', (event) => {
        const link = event.target.closest && event.target.closest('a.bank-link');
        if (!link) return;

        const bankName = link.getAttribute('data-bank-name') || 'unknown';
        const sentData = {
            bank: bankName,
            price: lastCalculationInputs.productPrice || lastCalculationInputs.price || null,
            down_payment: lastCalculationInputs.downPayment || lastCalculationInputs.down_payment || null,
            term: lastCalculationInputs.term || null
        };

        if (typeof ym === 'function') {
            try {
                ym(ymCounterId, 'reachGoal', 'bank_click', sentData);
            } catch (e) {
            }
        }
        // –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º –ø–µ—Ä–µ—Ö–æ–¥ (—Å—Å—ã–ª–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –≤ _blank)
    });
});

